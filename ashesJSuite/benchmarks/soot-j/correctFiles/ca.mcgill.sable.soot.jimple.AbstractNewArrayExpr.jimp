public class ca.mcgill.sable.soot.jimple.AbstractNewArrayExpr extends java.lang.Object implements ca.mcgill.sable.soot.jimple.NewArrayExpr
{
    ca.mcgill.sable.soot.Type baseType;
    ca.mcgill.sable.soot.jimple.ValueBox sizeBox;

    protected void <init>(ca.mcgill.sable.soot.Type, ca.mcgill.sable.soot.jimple.ValueBox)
    {
        ca.mcgill.sable.soot.jimple.AbstractNewArrayExpr r0;
        ca.mcgill.sable.soot.Type r1;
        ca.mcgill.sable.soot.jimple.ValueBox r2;

        r0 := @this;
        r1 := @parameter0;
        r2 := @parameter1;
        specialinvoke r0.<init>();
        r0.baseType = r1;
        r0.sizeBox = r2;
        return;
    }

    public java.lang.String toString()
    {
        ca.mcgill.sable.soot.jimple.AbstractNewArrayExpr r0;
        java.lang.StringBuffer r1, r2, r5, r7, r8, r12, r13, r15;
        ca.mcgill.sable.soot.Type r3;
        java.lang.String r4, r6, r11, r14, r16;
        ca.mcgill.sable.soot.jimple.ValueBox r9;
        ca.mcgill.sable.soot.jimple.Value r10;

        r0 := @this;
        r1 = new java.lang.StringBuffer;
        specialinvoke r1.<init>();
        r2 = new java.lang.StringBuffer;
        specialinvoke r2.<init>("new ");
        r3 = r0.baseType;
        r4 = r3.toString();
        r5 = r2.append(r4);
        r6 = r5.toString();
        r7 = r1.append(r6);
        r8 = new java.lang.StringBuffer;
        specialinvoke r8.<init>("[");
        r9 = r0.sizeBox;
        r10 = r9.getValue();
        r11 = r10.toString();
        r12 = r8.append(r11);
        r13 = r12.append("]");
        r14 = r13.toString();
        r15 = r1.append(r14);
        r16 = r1.toString();
        return r16;
    }

    public java.lang.String toBriefString()
    {
        ca.mcgill.sable.soot.jimple.AbstractNewArrayExpr r0;
        java.lang.StringBuffer r1, r2, r5, r7, r8, r13, r14, r16;
        ca.mcgill.sable.soot.Type r3;
        java.lang.String r4, r6, r12, r15, r17;
        ca.mcgill.sable.soot.jimple.ValueBox r9;
        ca.mcgill.sable.soot.jimple.Value r10;
        ca.mcgill.sable.soot.ToBriefString r11;

        r0 := @this;
        r1 = new java.lang.StringBuffer;
        specialinvoke r1.<init>();
        r2 = new java.lang.StringBuffer;
        specialinvoke r2.<init>("new ");
        r3 = r0.baseType;
        r4 = r3.toString();
        r5 = r2.append(r4);
        r6 = r5.toString();
        r7 = r1.append(r6);
        r8 = new java.lang.StringBuffer;
        specialinvoke r8.<init>("[");
        r9 = r0.sizeBox;
        r10 = r9.getValue();
        r11 = (ca.mcgill.sable.soot.ToBriefString) r10;
        r12 = r11.toBriefString();
        r13 = r8.append(r12);
        r14 = r13.append("]");
        r15 = r14.toString();
        r16 = r1.append(r15);
        r17 = r1.toString();
        return r17;
    }

    public ca.mcgill.sable.soot.Type getBaseType()
    {
        ca.mcgill.sable.soot.jimple.AbstractNewArrayExpr r0;
        ca.mcgill.sable.soot.Type r1;

        r0 := @this;
        r1 = r0.baseType;
        return r1;
    }

    public void setBaseType(ca.mcgill.sable.soot.Type)
    {
        ca.mcgill.sable.soot.jimple.AbstractNewArrayExpr r0;
        ca.mcgill.sable.soot.Type r1;

        r0 := @this;
        r1 := @parameter0;
        r0.baseType = r1;
        return;
    }

    public ca.mcgill.sable.soot.jimple.ValueBox getSizeBox()
    {
        ca.mcgill.sable.soot.jimple.AbstractNewArrayExpr r0;
        ca.mcgill.sable.soot.jimple.ValueBox r1;

        r0 := @this;
        r1 = r0.sizeBox;
        return r1;
    }

    public ca.mcgill.sable.soot.jimple.Value getSize()
    {
        ca.mcgill.sable.soot.jimple.AbstractNewArrayExpr r0;
        ca.mcgill.sable.soot.jimple.ValueBox r1;
        ca.mcgill.sable.soot.jimple.Value r2;

        r0 := @this;
        r1 = r0.sizeBox;
        r2 = r1.getValue();
        return r2;
    }

    public void setSize(ca.mcgill.sable.soot.jimple.Value)
    {
        ca.mcgill.sable.soot.jimple.AbstractNewArrayExpr r0;
        ca.mcgill.sable.soot.jimple.Value r1;
        ca.mcgill.sable.soot.jimple.ValueBox r2;

        r0 := @this;
        r1 := @parameter0;
        r2 = r0.sizeBox;
        r2.setValue(r1);
        return;
    }

    public ca.mcgill.sable.util.List getUseBoxes()
    {
        ca.mcgill.sable.soot.jimple.AbstractNewArrayExpr r0;
        ca.mcgill.sable.util.ArrayList r1;
        ca.mcgill.sable.soot.jimple.ValueBox r2, r5;
        ca.mcgill.sable.soot.jimple.Value r3;
        ca.mcgill.sable.util.List r4;
        int i0, i1;

        r0 := @this;
        r1 = new ca.mcgill.sable.util.ArrayList;
        specialinvoke r1.<init>();
        r2 = r0.sizeBox;
        r3 = r2.getValue();
        r4 = r3.getUseBoxes();
        i0 = r1.addAll(r4);
        r5 = r0.sizeBox;
        i1 = r1.add(r5);
        return r1;
    }

    public ca.mcgill.sable.soot.Type getType()
    {
        ca.mcgill.sable.soot.jimple.AbstractNewArrayExpr r0;
        ca.mcgill.sable.soot.Type r1, r2, r5, r8;
        int i0, i1, i2;
        ca.mcgill.sable.soot.ArrayType r3, r6, r7, r10;
        ca.mcgill.sable.soot.BaseType r4, r9;

        r0 := @this;
        r1 = r0.baseType;
        i0 = r1 instanceof ca.mcgill.sable.soot.ArrayType;
        if i0 == 0 goto label0;

        r2 = r0.baseType;
        r3 = (ca.mcgill.sable.soot.ArrayType) r2;
        r4 = r3.baseType;
        r5 = r0.baseType;
        r6 = (ca.mcgill.sable.soot.ArrayType) r5;
        i1 = r6.numDimensions;
        i2 = i1 + 1;
        r7 = ca.mcgill.sable.soot.ArrayType.v(r4, i2);
        return r7;

     label0:
        r8 = r0.baseType;
        r9 = (ca.mcgill.sable.soot.BaseType) r8;
        r10 = ca.mcgill.sable.soot.ArrayType.v(r9, 1);
        return r10;
    }

    public void apply(ca.mcgill.sable.util.Switch)
    {
        ca.mcgill.sable.soot.jimple.AbstractNewArrayExpr r0;
        ca.mcgill.sable.util.Switch r1;
        ca.mcgill.sable.soot.jimple.ExprSwitch r2;

        r0 := @this;
        r1 := @parameter0;
        r2 = (ca.mcgill.sable.soot.jimple.ExprSwitch) r1;
        r2.caseNewArrayExpr(r0);
        return;
    }
}
