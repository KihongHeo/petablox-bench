public class ca.mcgill.sable.soot.jimple.SparseLiveLocals extends java.lang.Object implements ca.mcgill.sable.soot.jimple.LiveLocals
{
    ca.mcgill.sable.util.Map stmtToLocalsAfter;
    ca.mcgill.sable.util.Map stmtToLocalsBefore;

    public void <init>(ca.mcgill.sable.soot.jimple.CompleteStmtGraph)
    {
        ca.mcgill.sable.soot.jimple.SparseLiveLocals r0;
        ca.mcgill.sable.soot.jimple.CompleteStmtGraph r1;
        java.lang.StringBuffer r2, r8, r9;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11;
        ca.mcgill.sable.soot.Timer r3, r12, r30, r31;
        java.io.PrintStream r4;
        ca.mcgill.sable.soot.jimple.StmtBody r5;
        ca.mcgill.sable.soot.SootMethod r6;
        java.lang.String r7, r10;
        ca.mcgill.sable.soot.jimple.SparseLiveLocalsAnalysis r11;
        ca.mcgill.sable.util.HashMap r13, r14;
        ca.mcgill.sable.util.Iterator r15;
        java.lang.Object r16, r18, r23, r24, r29;
        ca.mcgill.sable.soot.jimple.Stmt r17;
        ca.mcgill.sable.soot.jimple.FlowSet r19, r25;
        ca.mcgill.sable.util.Map r20, r26;
        ca.mcgill.sable.util.List r21, r22, r27, r28;

        r0 := @this;
        r1 := @parameter0;
        specialinvoke r0.<init>();
        i0 = ca.mcgill.sable.soot.jimple.Main.isProfilingOptimization;
        if i0 == 0 goto label0;

        r3 = ca.mcgill.sable.soot.jimple.Main.liveTimer;
        r3.start();

     label0:
        i1 = ca.mcgill.sable.soot.jimple.Main.isVerbose;
        if i1 == 0 goto label1;

        r4 = java.lang.System.out;
        r2 = new java.lang.StringBuffer;
        specialinvoke r2.<init>("[");
        r5 = r1.getBody();
        r6 = r5.getMethod();
        r7 = r6.getName();
        r8 = r2.append(r7);
        r9 = r8.append("]     Constructing SparseLiveLocals...");
        r10 = r9.toString();
        r4.println(r10);

     label1:
        r11 = new ca.mcgill.sable.soot.jimple.SparseLiveLocalsAnalysis;
        specialinvoke r11.<init>(r1);
        i2 = ca.mcgill.sable.soot.jimple.Main.isProfilingOptimization;
        if i2 == 0 goto label2;

        r12 = ca.mcgill.sable.soot.jimple.Main.livePostTimer;
        r12.start();

     label2:
        r13 = new ca.mcgill.sable.util.HashMap;
        i3 = r1.size();
        i4 = i3 * 2;
        i5 = i4 + 1;
        specialinvoke r13.<init>(i5, 0.7F);
        r0.stmtToLocalsAfter = r13;
        r14 = new ca.mcgill.sable.util.HashMap;
        i6 = r1.size();
        i7 = i6 * 2;
        i8 = i7 + 1;
        specialinvoke r14.<init>(i8, 0.7F);
        r0.stmtToLocalsBefore = r14;
        r15 = r1.iterator();
        goto label4;

     label3:
        r16 = r15.next();
        r17 = (ca.mcgill.sable.soot.jimple.Stmt) r16;
        r18 = r11.getFlowBeforeStmt(r17);
        r19 = (ca.mcgill.sable.soot.jimple.FlowSet) r18;
        r20 = r0.stmtToLocalsBefore;
        r21 = r19.toList();
        r22 = ca.mcgill.sable.util.Collections.unmodifiableList(r21);
        r23 = r20.put(r17, r22);
        r24 = r11.getFlowAfterStmt(r17);
        r25 = (ca.mcgill.sable.soot.jimple.FlowSet) r24;
        r26 = r0.stmtToLocalsAfter;
        r27 = r25.toList();
        r28 = ca.mcgill.sable.util.Collections.unmodifiableList(r27);
        r29 = r26.put(r17, r28);

     label4:
        i9 = r15.hasNext();
        if i9 != 0 goto label3;

        i10 = ca.mcgill.sable.soot.jimple.Main.isProfilingOptimization;
        if i10 == 0 goto label5;

        r30 = ca.mcgill.sable.soot.jimple.Main.livePostTimer;
        r30.end();

     label5:
        i11 = ca.mcgill.sable.soot.jimple.Main.isProfilingOptimization;
        if i11 == 0 goto label6;

        r31 = ca.mcgill.sable.soot.jimple.Main.liveTimer;
        r31.end();

     label6:
        return;
    }

    public ca.mcgill.sable.util.List getLiveLocalsAfter(ca.mcgill.sable.soot.jimple.Stmt)
    {
        ca.mcgill.sable.soot.jimple.SparseLiveLocals r0;
        ca.mcgill.sable.soot.jimple.Stmt r1;
        ca.mcgill.sable.util.Map r2;
        java.lang.Object r3;
        ca.mcgill.sable.util.List r4;

        r0 := @this;
        r1 := @parameter0;
        r2 = r0.stmtToLocalsAfter;
        r3 = r2.get(r1);
        r4 = (ca.mcgill.sable.util.List) r3;
        return r4;
    }

    public ca.mcgill.sable.util.List getLiveLocalsBefore(ca.mcgill.sable.soot.jimple.Stmt)
    {
        ca.mcgill.sable.soot.jimple.SparseLiveLocals r0;
        ca.mcgill.sable.soot.jimple.Stmt r1;
        ca.mcgill.sable.util.Map r2;
        java.lang.Object r3;
        ca.mcgill.sable.util.List r4;

        r0 := @this;
        r1 := @parameter0;
        r2 = r0.stmtToLocalsBefore;
        r3 = r2.get(r1);
        r4 = (ca.mcgill.sable.util.List) r3;
        return r4;
    }
}
