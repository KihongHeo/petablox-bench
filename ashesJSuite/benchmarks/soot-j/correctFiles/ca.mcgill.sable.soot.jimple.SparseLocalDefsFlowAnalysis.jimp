class ca.mcgill.sable.soot.jimple.SparseLocalDefsFlowAnalysis extends ca.mcgill.sable.soot.jimple.ForwardFlowAnalysis
{
    ca.mcgill.sable.soot.jimple.FlowSet emptySet;
    ca.mcgill.sable.util.Map localToPreserveSet;
    ca.mcgill.sable.soot.jimple.FlowSet workingSet;
    ca.mcgill.sable.soot.jimple.LiveLocals liveLocals;

    public void <init>(ca.mcgill.sable.soot.jimple.StmtGraph, ca.mcgill.sable.soot.jimple.LiveLocals)
    {
        ca.mcgill.sable.soot.jimple.SparseLocalDefsFlowAnalysis r0;
        ca.mcgill.sable.soot.jimple.StmtGraph r1;
        ca.mcgill.sable.soot.jimple.LiveLocals r2;
        int i0, i1, i2, i3;
        ca.mcgill.sable.soot.Timer r3, r7, r8, r9;
        ca.mcgill.sable.soot.jimple.ArraySparseSet r4;
        ca.mcgill.sable.soot.jimple.FlowSet r5;
        java.lang.Object r6;

        r0 := @this;
        r1 := @parameter0;
        r2 := @parameter1;
        specialinvoke r0.<init>(r1);
        r0.liveLocals = r2;
        i0 = ca.mcgill.sable.soot.jimple.Main.isProfilingOptimization;
        if i0 == 0 goto label0;

        r3 = ca.mcgill.sable.soot.jimple.Main.defsSetupTimer;
        r3.start();

     label0:
        r4 = new ca.mcgill.sable.soot.jimple.ArraySparseSet;
        specialinvoke r4.<init>();
        r0.emptySet = r4;
        r5 = r0.emptySet;
        r6 = r5.clone();
        r0.workingSet = (ca.mcgill.sable.soot.jimple.FlowSet) r6;
        i1 = ca.mcgill.sable.soot.jimple.Main.isProfilingOptimization;
        if i1 == 0 goto label1;

        r7 = ca.mcgill.sable.soot.jimple.Main.defsSetupTimer;
        r7.end();

     label1:
        i2 = ca.mcgill.sable.soot.jimple.Main.isProfilingOptimization;
        if i2 == 0 goto label2;

        r8 = ca.mcgill.sable.soot.jimple.Main.defsAnalysisTimer;
        r8.start();

     label2:
        r0.doAnalysis();
        i3 = ca.mcgill.sable.soot.jimple.Main.isProfilingOptimization;
        if i3 == 0 goto label3;

        r9 = ca.mcgill.sable.soot.jimple.Main.defsAnalysisTimer;
        r9.end();

     label3:
        return;
    }

    protected java.lang.Object newInitialFlow()
    {
        ca.mcgill.sable.soot.jimple.SparseLocalDefsFlowAnalysis r0;
        ca.mcgill.sable.soot.jimple.FlowSet r1;
        java.lang.Object r2;

        r0 := @this;
        r1 = r0.emptySet;
        r2 = r1.clone();
        return r2;
    }

    protected void flowThrough(java.lang.Object, ca.mcgill.sable.soot.jimple.Stmt, java.lang.Object)
    {
        ca.mcgill.sable.soot.jimple.SparseLocalDefsFlowAnalysis r0;
        java.lang.Object r1, r3, r13, r24, r31;
        ca.mcgill.sable.soot.jimple.Stmt r2;
        ca.mcgill.sable.soot.jimple.FlowSet r4, r5, r10, r16, r17, r18, r23, r34, r35, r36;
        int i0, i1, i2, i3, i4, i5, i6;
        ca.mcgill.sable.soot.jimple.DefinitionStmt r6, r14, r32;
        ca.mcgill.sable.soot.jimple.Value r7, r8, r15, r26, r27, r33;
        ca.mcgill.sable.soot.jimple.Local r9, r28;
        ca.mcgill.sable.util.List r11, r19, r22, r29;
        ca.mcgill.sable.util.Iterator r12, r20, r30;
        ca.mcgill.sable.soot.jimple.LiveLocals r21;
        ca.mcgill.sable.soot.jimple.ValueBox r25;

        r0 := @this;
        r1 := @parameter0;
        r2 := @parameter1;
        r3 := @parameter2;
        r4 = (ca.mcgill.sable.soot.jimple.FlowSet) r1;
        r5 = (ca.mcgill.sable.soot.jimple.FlowSet) r3;
        i0 = r2 instanceof ca.mcgill.sable.soot.jimple.DefinitionStmt;
        if i0 == 0 goto label3;

        r6 = (ca.mcgill.sable.soot.jimple.DefinitionStmt) r2;
        r7 = r6.getLeftOp();
        i1 = r7 instanceof ca.mcgill.sable.soot.jimple.Local;
        if i1 != 0 goto label0;

        r4.copy(r5);
        goto label4;

     label0:
        r8 = r6.getLeftOp();
        r9 = (ca.mcgill.sable.soot.jimple.Local) r8;
        r10 = r0.workingSet;
        r10.clear();
        r11 = r4.toList();
        r12 = r11.iterator();
        goto label2;

     label1:
        r13 = r12.next();
        r14 = (ca.mcgill.sable.soot.jimple.DefinitionStmt) r13;
        r15 = r14.getLeftOp();
        if r15 != r9 goto label2;

        r16 = r0.workingSet;
        r17 = r0.workingSet;
        r16.add(r14, r17);

     label2:
        i2 = r12.hasNext();
        if i2 != 0 goto label1;

        r18 = r0.workingSet;
        r4.difference(r18, r5);
        r5.add(r6, r5);
        goto label4;

     label3:
        r4.copy(r5);

     label4:
        r19 = r2.getUseBoxes();
        r20 = r19.iterator();
        r21 = r0.liveLocals;
        r22 = r21.getLiveLocalsAfter(r2);
        r23 = r0.workingSet;
        r23.clear();
        goto label8;

     label5:
        r24 = r20.next();
        r25 = (ca.mcgill.sable.soot.jimple.ValueBox) r24;
        r26 = r25.getValue();
        i3 = r26 instanceof ca.mcgill.sable.soot.jimple.Local;
        if i3 == 0 goto label8;

        r27 = r25.getValue();
        r28 = (ca.mcgill.sable.soot.jimple.Local) r27;
        i4 = r22.contains(r28);
        if i4 != 0 goto label8;

        r29 = r5.toList();
        r30 = r29.iterator();
        goto label7;

     label6:
        r31 = r30.next();
        r32 = (ca.mcgill.sable.soot.jimple.DefinitionStmt) r31;
        r33 = r32.getLeftOp();
        if r33 != r28 goto label7;

        r34 = r0.workingSet;
        r35 = r0.workingSet;
        r34.add(r32, r35);

     label7:
        i5 = r30.hasNext();
        if i5 != 0 goto label6;

     label8:
        i6 = r20.hasNext();
        if i6 != 0 goto label5;

        r36 = r0.workingSet;
        r5.difference(r36, r5);
        return;
    }

    protected void copy(java.lang.Object, java.lang.Object)
    {
        ca.mcgill.sable.soot.jimple.SparseLocalDefsFlowAnalysis r0;
        java.lang.Object r1, r2;
        ca.mcgill.sable.soot.jimple.FlowSet r3, r4;

        r0 := @this;
        r1 := @parameter0;
        r2 := @parameter1;
        r3 = (ca.mcgill.sable.soot.jimple.FlowSet) r1;
        r4 = (ca.mcgill.sable.soot.jimple.FlowSet) r2;
        r3.copy(r4);
        return;
    }

    protected void merge(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        ca.mcgill.sable.soot.jimple.SparseLocalDefsFlowAnalysis r0;
        java.lang.Object r1, r2, r3;
        ca.mcgill.sable.soot.jimple.FlowSet r4, r5, r6;

        r0 := @this;
        r1 := @parameter0;
        r2 := @parameter1;
        r3 := @parameter2;
        r4 = (ca.mcgill.sable.soot.jimple.FlowSet) r1;
        r5 = (ca.mcgill.sable.soot.jimple.FlowSet) r2;
        r6 = (ca.mcgill.sable.soot.jimple.FlowSet) r3;
        r4.union(r5, r6);
        return;
    }
}
