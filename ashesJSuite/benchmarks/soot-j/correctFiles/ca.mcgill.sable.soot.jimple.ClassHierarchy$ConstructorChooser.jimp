class ca.mcgill.sable.soot.jimple.ClassHierarchy$ConstructorChooser extends ca.mcgill.sable.soot.TypeSwitch
{
    private final ca.mcgill.sable.soot.jimple.ClassHierarchy this$0;
    private ca.mcgill.sable.soot.jimple.ClassHierarchy$TypeNode result;

    void <init>(ca.mcgill.sable.soot.jimple.ClassHierarchy)
    {
        ca.mcgill.sable.soot.jimple.ClassHierarchy$ConstructorChooser r0;
        ca.mcgill.sable.soot.jimple.ClassHierarchy r1;

        r0 := @this;
        r1 := @parameter0;
        specialinvoke r0.<init>();
        r0.this$0 = r1;
        r0.this$0 = r1;
        return;
    }

    ca.mcgill.sable.soot.jimple.ClassHierarchy$TypeNode typeNode(ca.mcgill.sable.soot.Type)
    {
        ca.mcgill.sable.soot.jimple.ClassHierarchy$ConstructorChooser r0;
        ca.mcgill.sable.soot.Type r1;
        ca.mcgill.sable.soot.jimple.ClassHierarchy$TypeNode r2;

        r0 := @this;
        r1 := @parameter0;
        r1.apply(r0);
        r2 = r0.result;
        return r2;
    }

    public void caseRefType(ca.mcgill.sable.soot.RefType)
    {
        ca.mcgill.sable.soot.jimple.ClassHierarchy$ConstructorChooser r0;
        ca.mcgill.sable.soot.RefType r1;
        ca.mcgill.sable.soot.jimple.ClassHierarchy$TypeNode r2;
        ca.mcgill.sable.soot.jimple.ClassHierarchy r3;

        r0 := @this;
        r1 := @parameter0;
        r2 = new ca.mcgill.sable.soot.jimple.ClassHierarchy$TypeNode;
        r3 = r0.this$0;
        specialinvoke r2.<init>(r3, r1);
        r0.result = r2;
        return;
    }

    public void caseArrayType(ca.mcgill.sable.soot.ArrayType)
    {
        ca.mcgill.sable.soot.jimple.ClassHierarchy$ConstructorChooser r0;
        ca.mcgill.sable.soot.ArrayType r1;
        ca.mcgill.sable.soot.jimple.ClassHierarchy$TypeNode r2;
        ca.mcgill.sable.soot.jimple.ClassHierarchy r3;

        r0 := @this;
        r1 := @parameter0;
        r2 = new ca.mcgill.sable.soot.jimple.ClassHierarchy$TypeNode;
        r3 = r0.this$0;
        specialinvoke r2.<init>(r3, r1);
        r0.result = r2;
        return;
    }

    public void defaultCase(ca.mcgill.sable.soot.Type)
    {
        ca.mcgill.sable.soot.jimple.ClassHierarchy$ConstructorChooser r0;
        ca.mcgill.sable.soot.Type r1;
        ca.mcgill.sable.soot.jimple.ClassHierarchy$TypeNode r2;
        ca.mcgill.sable.soot.jimple.ClassHierarchy r3;

        r0 := @this;
        r1 := @parameter0;
        r2 = new ca.mcgill.sable.soot.jimple.ClassHierarchy$TypeNode;
        r3 = r0.this$0;
        specialinvoke r2.<init>(r3, r1);
        r0.result = r2;
        return;
    }
}
