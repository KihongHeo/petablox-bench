public class ca.mcgill.sable.soot.jimple.AbstractNewMultiArrayExpr extends java.lang.Object implements ca.mcgill.sable.soot.jimple.NewMultiArrayExpr
{
    ca.mcgill.sable.soot.ArrayType baseType;
    protected ca.mcgill.sable.soot.jimple.ValueBox[] sizeBoxes;

    protected void <init>(ca.mcgill.sable.soot.ArrayType, ca.mcgill.sable.soot.jimple.ValueBox[])
    {
        ca.mcgill.sable.soot.jimple.AbstractNewMultiArrayExpr r0;
        ca.mcgill.sable.soot.ArrayType r1;
        ca.mcgill.sable.soot.jimple.ValueBox[] r2;

        r0 := @this;
        r1 := @parameter0;
        r2 := @parameter1;
        specialinvoke r0.<init>();
        r0.baseType = r1;
        r0.sizeBoxes = r2;
        return;
    }

    public java.lang.String toString()
    {
        ca.mcgill.sable.soot.jimple.AbstractNewMultiArrayExpr r0;
        java.lang.StringBuffer r1, r2, r6, r8, r9, r14, r15, r17, r19;
        int i0, i1, i2, i3, i4, i5;
        ca.mcgill.sable.soot.ArrayType r3, r20;
        ca.mcgill.sable.soot.BaseType r4;
        java.lang.String r5, r7, r13, r16, r22;
        ca.mcgill.sable.soot.jimple.ValueBox[] r10, r18, r21;
        ca.mcgill.sable.soot.jimple.ValueBox r11;
        ca.mcgill.sable.soot.jimple.Value r12;

        r0 := @this;
        r1 = new java.lang.StringBuffer;
        specialinvoke r1.<init>();
        r2 = new java.lang.StringBuffer;
        specialinvoke r2.<init>("newmulti ");
        r3 = r0.baseType;
        r4 = r3.baseType;
        r5 = r4.toString();
        r6 = r2.append(r5);
        r7 = r6.toString();
        r8 = r1.append(r7);
        i0 = 0;
        goto label1;

     label0:
        r9 = new java.lang.StringBuffer;
        specialinvoke r9.<init>("[");
        r10 = r0.sizeBoxes;
        r11 = r10[i0];
        r12 = r11.getValue();
        r13 = r12.toString();
        r14 = r9.append(r13);
        r15 = r14.append("]");
        r16 = r15.toString();
        r17 = r1.append(r16);
        i0 = i0 + 1;

     label1:
        r18 = r0.sizeBoxes;
        i2 = r18.length;
        if i0 < i2 goto label0;

        i1 = 0;
        goto label3;

     label2:
        r19 = r1.append("[]");
        i1 = i1 + 1;

     label3:
        r20 = r0.baseType;
        i3 = r20.numDimensions;
        r21 = r0.sizeBoxes;
        i4 = r21.length;
        i5 = i3 - i4;
        if i1 < i5 goto label2;

        r22 = r1.toString();
        return r22;
    }

    public java.lang.String toBriefString()
    {
        ca.mcgill.sable.soot.jimple.AbstractNewMultiArrayExpr r0;
        java.lang.StringBuffer r1, r2, r6, r8, r9, r15, r16, r18, r20;
        int i0, i1, i2, i3, i4, i5;
        ca.mcgill.sable.soot.ArrayType r3, r21;
        ca.mcgill.sable.soot.BaseType r4;
        java.lang.String r5, r7, r14, r17, r23;
        ca.mcgill.sable.soot.jimple.ValueBox[] r10, r19, r22;
        ca.mcgill.sable.soot.jimple.ValueBox r11;
        ca.mcgill.sable.soot.jimple.Value r12;
        ca.mcgill.sable.soot.ToBriefString r13;

        r0 := @this;
        r1 = new java.lang.StringBuffer;
        specialinvoke r1.<init>();
        r2 = new java.lang.StringBuffer;
        specialinvoke r2.<init>("new ");
        r3 = r0.baseType;
        r4 = r3.baseType;
        r5 = r4.toString();
        r6 = r2.append(r5);
        r7 = r6.toString();
        r8 = r1.append(r7);
        i0 = 0;
        goto label1;

     label0:
        r9 = new java.lang.StringBuffer;
        specialinvoke r9.<init>("[");
        r10 = r0.sizeBoxes;
        r11 = r10[i0];
        r12 = r11.getValue();
        r13 = (ca.mcgill.sable.soot.ToBriefString) r12;
        r14 = r13.toBriefString();
        r15 = r9.append(r14);
        r16 = r15.append("]");
        r17 = r16.toString();
        r18 = r1.append(r17);
        i0 = i0 + 1;

     label1:
        r19 = r0.sizeBoxes;
        i2 = r19.length;
        if i0 < i2 goto label0;

        i1 = 0;
        goto label3;

     label2:
        r20 = r1.append("[]");
        i1 = i1 + 1;

     label3:
        r21 = r0.baseType;
        i3 = r21.numDimensions;
        r22 = r0.sizeBoxes;
        i4 = r22.length;
        i5 = i3 - i4;
        if i1 < i5 goto label2;

        r23 = r1.toString();
        return r23;
    }

    public ca.mcgill.sable.soot.ArrayType getBaseType()
    {
        ca.mcgill.sable.soot.jimple.AbstractNewMultiArrayExpr r0;
        ca.mcgill.sable.soot.ArrayType r1;

        r0 := @this;
        r1 = r0.baseType;
        return r1;
    }

    public void setBaseType(ca.mcgill.sable.soot.ArrayType)
    {
        ca.mcgill.sable.soot.jimple.AbstractNewMultiArrayExpr r0;
        ca.mcgill.sable.soot.ArrayType r1;

        r0 := @this;
        r1 := @parameter0;
        r0.baseType = r1;
        return;
    }

    public ca.mcgill.sable.soot.jimple.ValueBox getSizeBox(int)
    {
        ca.mcgill.sable.soot.jimple.AbstractNewMultiArrayExpr r0;
        int i0;
        ca.mcgill.sable.soot.jimple.ValueBox[] r1;
        ca.mcgill.sable.soot.jimple.ValueBox r2;

        r0 := @this;
        i0 := @parameter0;
        r1 = r0.sizeBoxes;
        r2 = r1[i0];
        return r2;
    }

    public int getSizeCount()
    {
        ca.mcgill.sable.soot.jimple.AbstractNewMultiArrayExpr r0;
        ca.mcgill.sable.soot.jimple.ValueBox[] r1;
        int i0;

        r0 := @this;
        r1 = r0.sizeBoxes;
        i0 = r1.length;
        return i0;
    }

    public ca.mcgill.sable.soot.jimple.Value getSize(int)
    {
        ca.mcgill.sable.soot.jimple.AbstractNewMultiArrayExpr r0;
        int i0;
        ca.mcgill.sable.soot.jimple.ValueBox[] r1;
        ca.mcgill.sable.soot.jimple.ValueBox r2;
        ca.mcgill.sable.soot.jimple.Value r3;

        r0 := @this;
        i0 := @parameter0;
        r1 = r0.sizeBoxes;
        r2 = r1[i0];
        r3 = r2.getValue();
        return r3;
    }

    public ca.mcgill.sable.util.List getSizes()
    {
        ca.mcgill.sable.soot.jimple.AbstractNewMultiArrayExpr r0;
        ca.mcgill.sable.util.ArrayList r1;
        int i0, i1, i2;
        ca.mcgill.sable.soot.jimple.ValueBox[] r2, r5;
        ca.mcgill.sable.soot.jimple.ValueBox r3;
        ca.mcgill.sable.soot.jimple.Value r4;

        r0 := @this;
        r1 = new ca.mcgill.sable.util.ArrayList;
        specialinvoke r1.<init>();
        i0 = 0;
        goto label1;

     label0:
        r2 = r0.sizeBoxes;
        r3 = r2[i0];
        r4 = r3.getValue();
        i1 = r1.add(r4);
        i0 = i0 + 1;

     label1:
        r5 = r0.sizeBoxes;
        i2 = r5.length;
        if i0 < i2 goto label0;

        return r1;
    }

    public void setSize(int, ca.mcgill.sable.soot.jimple.Value)
    {
        ca.mcgill.sable.soot.jimple.AbstractNewMultiArrayExpr r0;
        int i0;
        ca.mcgill.sable.soot.jimple.Value r1;
        ca.mcgill.sable.soot.jimple.ValueBox[] r2;
        ca.mcgill.sable.soot.jimple.ValueBox r3;

        r0 := @this;
        i0 := @parameter0;
        r1 := @parameter1;
        r2 = r0.sizeBoxes;
        r3 = r2[i0];
        r3.setValue(r1);
        return;
    }

    public ca.mcgill.sable.util.List getUseBoxes()
    {
        ca.mcgill.sable.soot.jimple.AbstractNewMultiArrayExpr r0;
        ca.mcgill.sable.util.ArrayList r1;
        int i0, i1, i2, i3;
        ca.mcgill.sable.soot.jimple.ValueBox[] r2, r6, r8;
        ca.mcgill.sable.soot.jimple.ValueBox r3, r7;
        ca.mcgill.sable.soot.jimple.Value r4;
        ca.mcgill.sable.util.List r5;

        r0 := @this;
        r1 = new ca.mcgill.sable.util.ArrayList;
        specialinvoke r1.<init>();
        i0 = 0;
        goto label1;

     label0:
        r2 = r0.sizeBoxes;
        r3 = r2[i0];
        r4 = r3.getValue();
        r5 = r4.getUseBoxes();
        i1 = r1.addAll(r5);
        r6 = r0.sizeBoxes;
        r7 = r6[i0];
        i2 = r1.add(r7);
        i0 = i0 + 1;

     label1:
        r8 = r0.sizeBoxes;
        i3 = r8.length;
        if i0 < i3 goto label0;

        return r1;
    }

    public ca.mcgill.sable.soot.Type getType()
    {
        ca.mcgill.sable.soot.jimple.AbstractNewMultiArrayExpr r0;
        ca.mcgill.sable.soot.ArrayType r1;

        r0 := @this;
        r1 = r0.baseType;
        return r1;
    }

    public void apply(ca.mcgill.sable.util.Switch)
    {
        ca.mcgill.sable.soot.jimple.AbstractNewMultiArrayExpr r0;
        ca.mcgill.sable.util.Switch r1;
        ca.mcgill.sable.soot.jimple.ExprSwitch r2;

        r0 := @this;
        r1 := @parameter0;
        r2 = (ca.mcgill.sable.soot.jimple.ExprSwitch) r1;
        r2.caseNewMultiArrayExpr(r0);
        return;
    }
}
