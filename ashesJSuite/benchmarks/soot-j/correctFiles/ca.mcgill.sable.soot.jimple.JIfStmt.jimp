public class ca.mcgill.sable.soot.jimple.JIfStmt extends ca.mcgill.sable.soot.jimple.AbstractStmt implements ca.mcgill.sable.soot.jimple.IfStmt
{
    ca.mcgill.sable.soot.jimple.ValueBox conditionBox;
    ca.mcgill.sable.soot.jimple.UnitBox targetBox;
    ca.mcgill.sable.util.List targetBoxes;

    void <init>(ca.mcgill.sable.soot.jimple.Value, ca.mcgill.sable.soot.jimple.Unit)
    {
        ca.mcgill.sable.soot.jimple.JIfStmt r0;
        ca.mcgill.sable.soot.jimple.Value r1;
        ca.mcgill.sable.soot.jimple.Unit r2;
        ca.mcgill.sable.soot.jimple.Jimple r3, r5;
        ca.mcgill.sable.soot.jimple.ValueBox r4;
        ca.mcgill.sable.soot.jimple.UnitBox r6;

        r0 := @this;
        r1 := @parameter0;
        r2 := @parameter1;
        r3 = ca.mcgill.sable.soot.jimple.Jimple.v();
        r4 = r3.newConditionExprBox(r1);
        r5 = ca.mcgill.sable.soot.jimple.Jimple.v();
        r6 = r5.newStmtBox(r2);
        specialinvoke r0.<init>(r4, r6);
        return;
    }

    protected void <init>(ca.mcgill.sable.soot.jimple.ValueBox, ca.mcgill.sable.soot.jimple.UnitBox)
    {
        ca.mcgill.sable.soot.jimple.JIfStmt r0;
        ca.mcgill.sable.soot.jimple.ValueBox r1;
        ca.mcgill.sable.soot.jimple.UnitBox r2, r5;
        ca.mcgill.sable.util.ArrayList r3;
        ca.mcgill.sable.util.List r4, r6;
        int i0;

        r0 := @this;
        r1 := @parameter0;
        r2 := @parameter1;
        specialinvoke r0.<init>();
        r0.conditionBox = r1;
        r0.targetBox = r2;
        r3 = new ca.mcgill.sable.util.ArrayList;
        specialinvoke r3.<init>();
        r0.targetBoxes = r3;
        r4 = r0.targetBoxes;
        r5 = r0.targetBox;
        i0 = r4.add(r5);
        r6 = r0.targetBoxes;
        r0.targetBoxes = ca.mcgill.sable.util.Collections.unmodifiableList(r6);
        return;
    }

    protected java.lang.String toString(boolean, ca.mcgill.sable.util.Map, java.lang.String)
    {
        ca.mcgill.sable.soot.jimple.JIfStmt r0;
        int i0;
        ca.mcgill.sable.util.Map r1;
        java.lang.String r2, r4, r8, r13, r15, r17, r20, r25, r27;
        java.lang.StringBuffer r3, r5, r9, r10, r14, r16, r18, r21, r22, r26;
        ca.mcgill.sable.soot.jimple.Value r6, r19;
        ca.mcgill.sable.soot.ToBriefString r7;
        ca.mcgill.sable.soot.jimple.Stmt r11, r23;
        java.lang.Object r12, r24;

        r0 := @this;
        i0 := @parameter0;
        r1 := @parameter1;
        r2 := @parameter2;
        if i0 == 0 goto label0;

        r3 = new java.lang.StringBuffer;
        r4 = java.lang.String.valueOf(r2);
        specialinvoke r3.<init>(r4);
        r5 = r3.append("if ");
        r6 = r0.getCondition();
        r7 = (ca.mcgill.sable.soot.ToBriefString) r6;
        r8 = r7.toBriefString();
        r9 = r5.append(r8);
        r10 = r9.append(" goto ");
        r11 = r0.getTarget();
        r12 = r1.get(r11);
        r13 = (java.lang.String) r12;
        r14 = r10.append(r13);
        r15 = r14.toString();
        return r15;

     label0:
        r16 = new java.lang.StringBuffer;
        r17 = java.lang.String.valueOf(r2);
        specialinvoke r16.<init>(r17);
        r18 = r16.append("if ");
        r19 = r0.getCondition();
        r20 = r19.toString();
        r21 = r18.append(r20);
        r22 = r21.append(" goto ");
        r23 = r0.getTarget();
        r24 = r1.get(r23);
        r25 = (java.lang.String) r24;
        r26 = r22.append(r25);
        r27 = r26.toString();
        return r27;
    }

    public java.lang.String toString()
    {
        ca.mcgill.sable.soot.jimple.JIfStmt r0;
        java.lang.StringBuffer r1, r5, r6;
        ca.mcgill.sable.soot.jimple.ValueBox r2;
        ca.mcgill.sable.soot.jimple.Value r3;
        java.lang.String r4, r7;

        r0 := @this;
        r1 = new java.lang.StringBuffer;
        specialinvoke r1.<init>("if ");
        r2 = r0.conditionBox;
        r3 = r2.getValue();
        r4 = r3.toString();
        r5 = r1.append(r4);
        r6 = r5.append(" goto ?");
        r7 = r6.toString();
        return r7;
    }

    public ca.mcgill.sable.soot.jimple.Value getCondition()
    {
        ca.mcgill.sable.soot.jimple.JIfStmt r0;
        ca.mcgill.sable.soot.jimple.ValueBox r1;
        ca.mcgill.sable.soot.jimple.Value r2;

        r0 := @this;
        r1 = r0.conditionBox;
        r2 = r1.getValue();
        return r2;
    }

    public void setCondition(ca.mcgill.sable.soot.jimple.Value)
    {
        ca.mcgill.sable.soot.jimple.JIfStmt r0;
        ca.mcgill.sable.soot.jimple.Value r1;
        ca.mcgill.sable.soot.jimple.ValueBox r2;

        r0 := @this;
        r1 := @parameter0;
        r2 = r0.conditionBox;
        r2.setValue(r1);
        return;
    }

    public ca.mcgill.sable.soot.jimple.ValueBox getConditionBox()
    {
        ca.mcgill.sable.soot.jimple.JIfStmt r0;
        ca.mcgill.sable.soot.jimple.ValueBox r1;

        r0 := @this;
        r1 = r0.conditionBox;
        return r1;
    }

    public ca.mcgill.sable.soot.jimple.Stmt getTarget()
    {
        ca.mcgill.sable.soot.jimple.JIfStmt r0;
        ca.mcgill.sable.soot.jimple.UnitBox r1;
        ca.mcgill.sable.soot.jimple.Unit r2;
        ca.mcgill.sable.soot.jimple.Stmt r3;

        r0 := @this;
        r1 = r0.targetBox;
        r2 = r1.getUnit();
        r3 = (ca.mcgill.sable.soot.jimple.Stmt) r2;
        return r3;
    }

    public void setTarget(ca.mcgill.sable.soot.jimple.Unit)
    {
        ca.mcgill.sable.soot.jimple.JIfStmt r0;
        ca.mcgill.sable.soot.jimple.Unit r1;
        ca.mcgill.sable.soot.jimple.UnitBox r2;

        r0 := @this;
        r1 := @parameter0;
        r2 = r0.targetBox;
        r2.setUnit(r1);
        return;
    }

    public ca.mcgill.sable.soot.jimple.UnitBox getTargetBox()
    {
        ca.mcgill.sable.soot.jimple.JIfStmt r0;
        ca.mcgill.sable.soot.jimple.UnitBox r1;

        r0 := @this;
        r1 = r0.targetBox;
        return r1;
    }

    public ca.mcgill.sable.util.List getDefBoxes()
    {
        ca.mcgill.sable.soot.jimple.JIfStmt r0;
        ca.mcgill.sable.util.List r1;

        r0 := @this;
        r1 = ca.mcgill.sable.soot.jimple.AbstractStmt.emptyList;
        return r1;
    }

    public ca.mcgill.sable.util.List getUseBoxes()
    {
        ca.mcgill.sable.soot.jimple.JIfStmt r0;
        ca.mcgill.sable.util.ArrayList r1;
        ca.mcgill.sable.soot.jimple.ValueBox r2, r5;
        ca.mcgill.sable.soot.jimple.Value r3;
        ca.mcgill.sable.util.List r4;
        int i0, i1;

        r0 := @this;
        r1 = new ca.mcgill.sable.util.ArrayList;
        specialinvoke r1.<init>();
        r2 = r0.conditionBox;
        r3 = r2.getValue();
        r4 = r3.getUseBoxes();
        i0 = r1.addAll(r4);
        r5 = r0.conditionBox;
        i1 = r1.add(r5);
        return r1;
    }

    public ca.mcgill.sable.util.List getUnitBoxes()
    {
        ca.mcgill.sable.soot.jimple.JIfStmt r0;
        ca.mcgill.sable.util.List r1;

        r0 := @this;
        r1 = r0.targetBoxes;
        return r1;
    }

    public void apply(ca.mcgill.sable.util.Switch)
    {
        ca.mcgill.sable.soot.jimple.JIfStmt r0;
        ca.mcgill.sable.util.Switch r1;
        ca.mcgill.sable.soot.jimple.StmtSwitch r2;

        r0 := @this;
        r1 := @parameter0;
        r2 = (ca.mcgill.sable.soot.jimple.StmtSwitch) r1;
        r2.caseIfStmt(r0);
        return;
    }
}
