final class ca.mcgill.sable.soot.jimple.JasminClass$1 extends ca.mcgill.sable.soot.TypeSwitch
{
    private final ca.mcgill.sable.soot.jimple.JasminClass this$0;

    public void caseBooleanType(ca.mcgill.sable.soot.BooleanType)
    {
        ca.mcgill.sable.soot.jimple.JasminClass$1 r0;
        ca.mcgill.sable.soot.BooleanType r1;

        r0 := @this;
        r1 := @parameter0;
        r0.setResult("Z");
        return;
    }

    public void caseByteType(ca.mcgill.sable.soot.ByteType)
    {
        ca.mcgill.sable.soot.jimple.JasminClass$1 r0;
        ca.mcgill.sable.soot.ByteType r1;

        r0 := @this;
        r1 := @parameter0;
        r0.setResult("B");
        return;
    }

    public void caseCharType(ca.mcgill.sable.soot.CharType)
    {
        ca.mcgill.sable.soot.jimple.JasminClass$1 r0;
        ca.mcgill.sable.soot.CharType r1;

        r0 := @this;
        r1 := @parameter0;
        r0.setResult("C");
        return;
    }

    public void caseDoubleType(ca.mcgill.sable.soot.DoubleType)
    {
        ca.mcgill.sable.soot.jimple.JasminClass$1 r0;
        ca.mcgill.sable.soot.DoubleType r1;

        r0 := @this;
        r1 := @parameter0;
        r0.setResult("D");
        return;
    }

    public void caseFloatType(ca.mcgill.sable.soot.FloatType)
    {
        ca.mcgill.sable.soot.jimple.JasminClass$1 r0;
        ca.mcgill.sable.soot.FloatType r1;

        r0 := @this;
        r1 := @parameter0;
        r0.setResult("F");
        return;
    }

    public void caseIntType(ca.mcgill.sable.soot.IntType)
    {
        ca.mcgill.sable.soot.jimple.JasminClass$1 r0;
        ca.mcgill.sable.soot.IntType r1;

        r0 := @this;
        r1 := @parameter0;
        r0.setResult("I");
        return;
    }

    public void caseLongType(ca.mcgill.sable.soot.LongType)
    {
        ca.mcgill.sable.soot.jimple.JasminClass$1 r0;
        ca.mcgill.sable.soot.LongType r1;

        r0 := @this;
        r1 := @parameter0;
        r0.setResult("J");
        return;
    }

    public void caseShortType(ca.mcgill.sable.soot.ShortType)
    {
        ca.mcgill.sable.soot.jimple.JasminClass$1 r0;
        ca.mcgill.sable.soot.ShortType r1;

        r0 := @this;
        r1 := @parameter0;
        r0.setResult("S");
        return;
    }

    public void defaultCase(ca.mcgill.sable.soot.Type)
    {
        ca.mcgill.sable.soot.jimple.JasminClass$1 r0;
        ca.mcgill.sable.soot.Type r1;
        java.lang.RuntimeException r2;
        java.lang.StringBuffer r3, r4;
        java.lang.String r5;

        r0 := @this;
        r1 := @parameter0;
        r2 = new java.lang.RuntimeException;
        r3 = new java.lang.StringBuffer;
        specialinvoke r3.<init>("Invalid type: ");
        r4 = r3.append(r1);
        r5 = r4.toString();
        specialinvoke r2.<init>(r5);
        throw r2;
    }

    public void caseArrayType(ca.mcgill.sable.soot.ArrayType)
    {
        ca.mcgill.sable.soot.jimple.JasminClass$1 r0;
        ca.mcgill.sable.soot.ArrayType r1;
        java.lang.StringBuffer r2, r3, r4, r10;
        int i0, i1;
        java.lang.String r5, r6, r9, r11;
        ca.mcgill.sable.soot.jimple.JasminClass r7;
        ca.mcgill.sable.soot.BaseType r8;

        r0 := @this;
        r1 := @parameter0;
        r2 = new java.lang.StringBuffer;
        specialinvoke r2.<init>();
        i0 = 0;
        goto label1;

     label0:
        r3 = r2.append("[");
        i0 = i0 + 1;

     label1:
        i1 = r1.numDimensions;
        if i0 < i1 goto label0;

        r4 = new java.lang.StringBuffer;
        r5 = r2.toString();
        r6 = java.lang.String.valueOf(r5);
        specialinvoke r4.<init>(r6);
        r7 = r0.this$0;
        r8 = r1.baseType;
        r9 = r7.jasminDescriptorOf(r8);
        r10 = r4.append(r9);
        r11 = r10.toString();
        r0.setResult(r11);
        return;
    }

    public void caseRefType(ca.mcgill.sable.soot.RefType)
    {
        ca.mcgill.sable.soot.jimple.JasminClass$1 r0;
        ca.mcgill.sable.soot.RefType r1;
        java.lang.StringBuffer r2, r5, r6;
        java.lang.String r3, r4, r7;

        r0 := @this;
        r1 := @parameter0;
        r2 = new java.lang.StringBuffer;
        specialinvoke r2.<init>("L");
        r3 = r1.className;
        r4 = r3.replace(46, 47);
        r5 = r2.append(r4);
        r6 = r5.append(";");
        r7 = r6.toString();
        r0.setResult(r7);
        return;
    }

    public void caseVoidType(ca.mcgill.sable.soot.VoidType)
    {
        ca.mcgill.sable.soot.jimple.JasminClass$1 r0;
        ca.mcgill.sable.soot.VoidType r1;

        r0 := @this;
        r1 := @parameter0;
        r0.setResult("V");
        return;
    }

    void <init>(ca.mcgill.sable.soot.jimple.JasminClass)
    {
        ca.mcgill.sable.soot.jimple.JasminClass$1 r0;
        ca.mcgill.sable.soot.jimple.JasminClass r1;

        r0 := @this;
        r1 := @parameter0;
        specialinvoke r0.<init>();
        r0.this$0 = r1;
        return;
    }
}
