class ca.mcgill.sable.soot.jimple.TypeResolver$SCC extends java.lang.Object
{
    ca.mcgill.sable.soot.jimple.TypeResolver$TypeVariable[] variables;
    boolean[] black;
    ca.mcgill.sable.soot.jimple.TypeResolver$TypeVariable[] finished;
    int time;
    ca.mcgill.sable.util.LinkedList forest;
    ca.mcgill.sable.util.LinkedList current_tree;

    void <init>(java.util.Vector)
    {
        ca.mcgill.sable.soot.jimple.TypeResolver$SCC r0;
        java.util.Vector r1;
        ca.mcgill.sable.util.LinkedList r2, r39, r40, r41, r47, r50;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21;
        ca.mcgill.sable.soot.jimple.TypeResolver$TypeVariable r3, r10, r12, r13, r15, r18, r21, r23, r28, r30, r32, r33, r35, r38, r44, r46, r53, r54;
        java.util.Enumeration r4;
        ca.mcgill.sable.soot.jimple.TypeResolver$TypeVariable[] r5, r7, r8, r9, r11, r14, r17, r20, r22, r24, r25, r26, r27, r29, r31, r34, r37, r43, r45;
        java.lang.Object r6, r49, r52;
        boolean[] r16, r19, r36, r42;
        ca.mcgill.sable.util.Iterator r48, r51;

        r0 := @this;
        r1 := @parameter0;
        specialinvoke r0.<init>();
        r2 = new ca.mcgill.sable.util.LinkedList;
        specialinvoke r2.<init>();
        r0.forest = r2;
        i3 = r1.size();
        r0.variables = new ca.mcgill.sable.soot.jimple.TypeResolver$TypeVariable[i3];
        i0 = 0;
        r4 = r1.elements();
        goto label1;

     label0:
        r5 = r0.variables;
        i4 = i0;
        i0 = i0 + 1;
        r6 = r4.nextElement();
        r5[i4] = (ca.mcgill.sable.soot.jimple.TypeResolver$TypeVariable) r6;

     label1:
        i5 = r4.hasMoreElements();
        if i5 != 0 goto label0;

        r7 = r0.variables;
        i6 = r7.length;
        r0.black = new boolean[i6];
        r8 = r0.variables;
        i7 = r8.length;
        r0.finished = new ca.mcgill.sable.soot.jimple.TypeResolver$TypeVariable[i7];
        i1 = 0;
        goto label4;

     label2:
        r9 = r0.variables;
        r10 = r9[i1];
        r11 = r0.variables;
        r12 = r11[i1];
        r13 = r12.ecr();
        if r10 != r13 goto label3;

        r14 = r0.variables;
        r15 = r14[i1];
        i8 = r15.arrayDepth;
        if i8 != 0 goto label3;

        r16 = r0.black;
        r17 = r0.variables;
        r18 = r17[i1];
        i9 = ca.mcgill.sable.soot.jimple.TypeResolver$TypeVariable.access$0(r18);
        i10 = r16[i9];
        if i10 != 0 goto label3;

        r19 = r0.black;
        r20 = r0.variables;
        r21 = r20[i1];
        i11 = ca.mcgill.sable.soot.jimple.TypeResolver$TypeVariable.access$0(r21);
        r19[i11] = 1;
        r22 = r0.variables;
        r23 = r22[i1];
        r0.dfsg_visit(r23);

     label3:
        i1 = i1 + 1;

     label4:
        r24 = r0.variables;
        i12 = r24.length;
        if i1 < i12 goto label2;

        r25 = r0.variables;
        i13 = r25.length;
        r0.black = new boolean[i13];
        r26 = r0.variables;
        i14 = r26.length;
        i2 = i14 - 1;
        goto label7;

     label5:
        r27 = r0.finished;
        r28 = r27[i2];
        if r28 == null goto label6;

        r29 = r0.finished;
        r30 = r29[i2];
        r31 = r0.finished;
        r32 = r31[i2];
        r33 = r32.ecr();
        if r30 != r33 goto label6;

        r34 = r0.finished;
        r35 = r34[i2];
        i15 = r35.arrayDepth;
        if i15 != 0 goto label6;

        r36 = r0.black;
        r37 = r0.finished;
        r38 = r37[i2];
        i16 = ca.mcgill.sable.soot.jimple.TypeResolver$TypeVariable.access$0(r38);
        i17 = r36[i16];
        if i17 != 0 goto label6;

        r39 = new ca.mcgill.sable.util.LinkedList;
        specialinvoke r39.<init>();
        r0.current_tree = r39;
        r40 = r0.forest;
        r41 = r0.current_tree;
        i18 = r40.add(r41);
        r42 = r0.black;
        r43 = r0.finished;
        r44 = r43[i2];
        i19 = ca.mcgill.sable.soot.jimple.TypeResolver$TypeVariable.access$0(r44);
        r42[i19] = 1;
        r45 = r0.finished;
        r46 = r45[i2];
        r0.dfsgt_visit(r46);

     label6:
        i2 = i2 + -1;

     label7:
        if i2 >= 0 goto label5;

        r47 = r0.forest;
        r48 = r47.iterator();
        goto label12;

     label8:
        r49 = r48.next();
        r50 = (ca.mcgill.sable.util.LinkedList) r49;
        r3 = null;
        r51 = r50.iterator();
        goto label11;

     label9:
        r52 = r51.next();
        r53 = (ca.mcgill.sable.soot.jimple.TypeResolver$TypeVariable) r52;
        if r3 != null goto label10;

        r3 = r53;
        goto label11;

     label10:
        r54 = r3.ecrUnion(r53);

     label11:
        i20 = r51.hasNext();
        if i20 != 0 goto label9;

     label12:
        i21 = r48.hasNext();
        if i21 != 0 goto label8;

        return;
    }

    void dfsg_visit(ca.mcgill.sable.soot.jimple.TypeResolver$TypeVariable)
    {
        ca.mcgill.sable.soot.jimple.TypeResolver$SCC r0;
        ca.mcgill.sable.soot.jimple.TypeResolver$TypeVariable r1, r4, r6, r7;
        int i0, i1, i2, i3, i4, i5;
        ca.mcgill.sable.soot.jimple.TypeResolver$TypeVariable[] r2, r8;
        boolean[] r3, r5;

        r0 := @this;
        r1 := @parameter0;
        r2 = r1.getEcrParents();
        i0 = 0;
        goto label2;

     label0:
        r3 = r0.black;
        r4 = r2[i0];
        i1 = ca.mcgill.sable.soot.jimple.TypeResolver$TypeVariable.access$0(r4);
        i2 = r3[i1];
        if i2 != 0 goto label1;

        r5 = r0.black;
        r6 = r2[i0];
        i3 = ca.mcgill.sable.soot.jimple.TypeResolver$TypeVariable.access$0(r6);
        r5[i3] = 1;
        r7 = r2[i0];
        r0.dfsg_visit(r7);

     label1:
        i0 = i0 + 1;

     label2:
        i4 = r2.length;
        if i0 < i4 goto label0;

        r8 = r0.finished;
        i5 = r0.time;
        r0.time = i5 + 1;
        r8[i5] = r1;
        return;
    }

    void dfsgt_visit(ca.mcgill.sable.soot.jimple.TypeResolver$TypeVariable)
    {
        ca.mcgill.sable.soot.jimple.TypeResolver$SCC r0;
        ca.mcgill.sable.soot.jimple.TypeResolver$TypeVariable r1, r5, r6, r8, r9;
        int i0, i1, i2, i3, i4, i5, i6;
        ca.mcgill.sable.util.LinkedList r2;
        ca.mcgill.sable.soot.jimple.TypeResolver$TypeVariable[] r3;
        boolean[] r4, r7;

        r0 := @this;
        r1 := @parameter0;
        r2 = r0.current_tree;
        i1 = r2.add(r1);
        r3 = r1.getEcrChildren();
        i0 = 0;
        goto label2;

     label0:
        r4 = r0.black;
        r5 = r3[i0];
        i2 = ca.mcgill.sable.soot.jimple.TypeResolver$TypeVariable.access$0(r5);
        i3 = r4[i2];
        if i3 != 0 goto label1;

        r6 = r3[i0];
        i4 = r6.arrayDepth;
        if i4 != 0 goto label1;

        r7 = r0.black;
        r8 = r3[i0];
        i5 = ca.mcgill.sable.soot.jimple.TypeResolver$TypeVariable.access$0(r8);
        r7[i5] = 1;
        r9 = r3[i0];
        r0.dfsgt_visit(r9);

     label1:
        i0 = i0 + 1;

     label2:
        i6 = r3.length;
        if i0 < i6 goto label0;

        return;
    }
}
