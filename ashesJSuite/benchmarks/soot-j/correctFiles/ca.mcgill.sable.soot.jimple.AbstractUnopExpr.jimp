abstract class ca.mcgill.sable.soot.jimple.AbstractUnopExpr extends java.lang.Object implements ca.mcgill.sable.soot.jimple.UnopExpr
{
    ca.mcgill.sable.soot.jimple.ValueBox opBox;

    protected void <init>(ca.mcgill.sable.soot.jimple.ValueBox)
    {
        ca.mcgill.sable.soot.jimple.AbstractUnopExpr r0;
        ca.mcgill.sable.soot.jimple.ValueBox r1;

        r0 := @this;
        r1 := @parameter0;
        specialinvoke r0.<init>();
        r0.opBox = r1;
        return;
    }

    public ca.mcgill.sable.soot.jimple.Value getOp()
    {
        ca.mcgill.sable.soot.jimple.AbstractUnopExpr r0;
        ca.mcgill.sable.soot.jimple.ValueBox r1;
        ca.mcgill.sable.soot.jimple.Value r2;

        r0 := @this;
        r1 = r0.opBox;
        r2 = r1.getValue();
        return r2;
    }

    public void setOp(ca.mcgill.sable.soot.jimple.Value)
    {
        ca.mcgill.sable.soot.jimple.AbstractUnopExpr r0;
        ca.mcgill.sable.soot.jimple.Value r1;
        ca.mcgill.sable.soot.jimple.ValueBox r2;

        r0 := @this;
        r1 := @parameter0;
        r2 = r0.opBox;
        r2.setValue(r1);
        return;
    }

    public ca.mcgill.sable.soot.jimple.ValueBox getOpBox()
    {
        ca.mcgill.sable.soot.jimple.AbstractUnopExpr r0;
        ca.mcgill.sable.soot.jimple.ValueBox r1;

        r0 := @this;
        r1 = r0.opBox;
        return r1;
    }

    public ca.mcgill.sable.util.List getUseBoxes()
    {
        ca.mcgill.sable.soot.jimple.AbstractUnopExpr r0;
        ca.mcgill.sable.util.ArrayList r1;
        ca.mcgill.sable.soot.jimple.ValueBox r2, r5;
        ca.mcgill.sable.soot.jimple.Value r3;
        ca.mcgill.sable.util.List r4;
        int i0, i1;

        r0 := @this;
        r1 = new ca.mcgill.sable.util.ArrayList;
        specialinvoke r1.<init>();
        r2 = r0.opBox;
        r3 = r2.getValue();
        r4 = r3.getUseBoxes();
        i0 = r1.addAll(r4);
        r5 = r0.opBox;
        i1 = r1.add(r5);
        return r1;
    }

    public abstract java.lang.String toBriefString();

    public abstract ca.mcgill.sable.soot.Type getType();

    public abstract void apply(ca.mcgill.sable.util.Switch);
}
