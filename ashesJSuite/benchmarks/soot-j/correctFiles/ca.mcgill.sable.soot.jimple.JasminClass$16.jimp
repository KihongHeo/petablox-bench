final class ca.mcgill.sable.soot.jimple.JasminClass$16 extends ca.mcgill.sable.soot.TypeSwitch
{
    private final ca.mcgill.sable.soot.jimple.Local val$vAlias;
    private final ca.mcgill.sable.soot.jimple.JasminClass this$0;
    private final int val$slot;

    public void caseArrayType(ca.mcgill.sable.soot.ArrayType)
    {
        ca.mcgill.sable.soot.jimple.JasminClass$16 r0;
        ca.mcgill.sable.soot.ArrayType r1;
        int i0, i1, i2, i3;
        ca.mcgill.sable.soot.jimple.JasminClass r2, r6;
        java.lang.StringBuffer r3, r4, r7, r8;
        java.lang.String r5, r9;

        r0 := @this;
        r1 := @parameter0;
        i0 = r0.val$slot;
        if i0 < 0 goto label0;

        i1 = r0.val$slot;
        if i1 > 3 goto label0;

        r2 = r0.this$0;
        r3 = new java.lang.StringBuffer;
        specialinvoke r3.<init>("aload_");
        i2 = r0.val$slot;
        r4 = r3.append(i2);
        r5 = r4.toString();
        r2.emit(r5, 1);
        return;

     label0:
        r6 = r0.this$0;
        r7 = new java.lang.StringBuffer;
        specialinvoke r7.<init>("aload ");
        i3 = r0.val$slot;
        r8 = r7.append(i3);
        r9 = r8.toString();
        r6.emit(r9, 1);
        return;
    }

    public void defaultCase(ca.mcgill.sable.soot.Type)
    {
        ca.mcgill.sable.soot.jimple.JasminClass$16 r0;
        ca.mcgill.sable.soot.Type r1;
        java.lang.RuntimeException r2;
        java.lang.StringBuffer r3, r4;
        java.lang.String r5;

        r0 := @this;
        r1 := @parameter0;
        r2 = new java.lang.RuntimeException;
        r3 = new java.lang.StringBuffer;
        specialinvoke r3.<init>("invalid local type to load");
        r4 = r3.append(r1);
        r5 = r4.toString();
        specialinvoke r2.<init>(r5);
        throw r2;
    }

    public void caseDoubleType(ca.mcgill.sable.soot.DoubleType)
    {
        ca.mcgill.sable.soot.jimple.JasminClass$16 r0;
        ca.mcgill.sable.soot.DoubleType r1;
        int i0, i1, i2, i3;
        ca.mcgill.sable.soot.jimple.JasminClass r2, r6;
        java.lang.StringBuffer r3, r4, r7, r8;
        java.lang.String r5, r9;

        r0 := @this;
        r1 := @parameter0;
        i0 = r0.val$slot;
        if i0 < 0 goto label0;

        i1 = r0.val$slot;
        if i1 > 3 goto label0;

        r2 = r0.this$0;
        r3 = new java.lang.StringBuffer;
        specialinvoke r3.<init>("dload_");
        i2 = r0.val$slot;
        r4 = r3.append(i2);
        r5 = r4.toString();
        r2.emit(r5, 2);
        return;

     label0:
        r6 = r0.this$0;
        r7 = new java.lang.StringBuffer;
        specialinvoke r7.<init>("dload ");
        i3 = r0.val$slot;
        r8 = r7.append(i3);
        r9 = r8.toString();
        r6.emit(r9, 2);
        return;
    }

    public void caseFloatType(ca.mcgill.sable.soot.FloatType)
    {
        ca.mcgill.sable.soot.jimple.JasminClass$16 r0;
        ca.mcgill.sable.soot.FloatType r1;
        int i0, i1, i2, i3;
        ca.mcgill.sable.soot.jimple.JasminClass r2, r6;
        java.lang.StringBuffer r3, r4, r7, r8;
        java.lang.String r5, r9;

        r0 := @this;
        r1 := @parameter0;
        i0 = r0.val$slot;
        if i0 < 0 goto label0;

        i1 = r0.val$slot;
        if i1 > 3 goto label0;

        r2 = r0.this$0;
        r3 = new java.lang.StringBuffer;
        specialinvoke r3.<init>("fload_");
        i2 = r0.val$slot;
        r4 = r3.append(i2);
        r5 = r4.toString();
        r2.emit(r5, 1);
        return;

     label0:
        r6 = r0.this$0;
        r7 = new java.lang.StringBuffer;
        specialinvoke r7.<init>("fload ");
        i3 = r0.val$slot;
        r8 = r7.append(i3);
        r9 = r8.toString();
        r6.emit(r9, 1);
        return;
    }

    public void caseIntType(ca.mcgill.sable.soot.IntType)
    {
        ca.mcgill.sable.soot.jimple.JasminClass$16 r0;
        ca.mcgill.sable.soot.IntType r1;
        java.lang.StringBuffer r2, r16, r30, r31, r34, r35;
        ca.mcgill.sable.soot.jimple.Local r3, r5;
        ca.mcgill.sable.soot.jimple.JasminClass r4, r6, r7, r8, r9, r11, r12, r13, r15, r19, r20, r21, r22, r23, r25, r26, r28, r29, r33;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10;
        ca.mcgill.sable.soot.jimple.Stmt r10;
        ca.mcgill.sable.util.List r14, r27;
        java.lang.String r17, r32, r36;
        java.lang.Object r18;
        ca.mcgill.sable.soot.jimple.Value r24;

        r0 := @this;
        r1 := @parameter0;
        r3 = r0.val$vAlias;
        r4 = r0.this$0;
        r5 = r4.plusPlusHolder;
        i0 = r3.equals(r5);
        if i0 == 0 goto label3;

        r6 = r0.this$0;
        i1 = r6.plusPlusState;
        tableswitch(i1)
        {
            case 0: goto label0;
            case 1: goto label2;
            default: goto label3;
        };

     label0:
        r7 = r0.this$0;
        r7.plusPlusState = 1;
        r8 = r0.this$0;
        r9 = r0.this$0;
        r10 = r9.plusPlusIncrementer;
        r8.emitStmt(r10);
        r11 = r0.this$0;
        i2 = r11.plusPlusHeight;
        r12 = r0.this$0;
        i3 = r12.currentStackHeight;
        i4 = i2 - i3;
        i5 = i4 + 1;
        if i5 <= 0 goto label1;

        r13 = r0.this$0;
        r14 = r13.code;
        r15 = r0.this$0;
        i6 = r15.plusPlusPlace;
        r2 = new java.lang.StringBuffer;
        specialinvoke r2.<init>("    dup_x");
        r16 = r2.append(i5);
        r17 = r16.toString();
        r18 = r14.set(i6, r17);

     label1:
        r19 = r0.this$0;
        r19.plusPlusHolder = null;
        return;

     label2:
        r20 = r0.this$0;
        r21 = r0.this$0;
        r20.plusPlusHeight = r21.currentStackHeight;
        r22 = r0.this$0;
        r23 = r0.this$0;
        r24 = r23.plusPlusValue;
        r22.emitValue(r24);
        r25 = r0.this$0;
        r26 = r0.this$0;
        r27 = r26.code;
        r25.plusPlusPlace = r27.size();
        r28 = r0.this$0;
        r28.emit("dup", 1);
        return;

     label3:
        i7 = r0.val$slot;
        if i7 < 0 goto label4;

        i8 = r0.val$slot;
        if i8 > 3 goto label4;

        r29 = r0.this$0;
        r30 = new java.lang.StringBuffer;
        specialinvoke r30.<init>("iload_");
        i9 = r0.val$slot;
        r31 = r30.append(i9);
        r32 = r31.toString();
        r29.emit(r32, 1);
        return;

     label4:
        r33 = r0.this$0;
        r34 = new java.lang.StringBuffer;
        specialinvoke r34.<init>("iload ");
        i10 = r0.val$slot;
        r35 = r34.append(i10);
        r36 = r35.toString();
        r33.emit(r36, 1);
        return;
    }

    public void caseLongType(ca.mcgill.sable.soot.LongType)
    {
        ca.mcgill.sable.soot.jimple.JasminClass$16 r0;
        ca.mcgill.sable.soot.LongType r1;
        int i0, i1, i2, i3;
        ca.mcgill.sable.soot.jimple.JasminClass r2, r6;
        java.lang.StringBuffer r3, r4, r7, r8;
        java.lang.String r5, r9;

        r0 := @this;
        r1 := @parameter0;
        i0 = r0.val$slot;
        if i0 < 0 goto label0;

        i1 = r0.val$slot;
        if i1 > 3 goto label0;

        r2 = r0.this$0;
        r3 = new java.lang.StringBuffer;
        specialinvoke r3.<init>("lload_");
        i2 = r0.val$slot;
        r4 = r3.append(i2);
        r5 = r4.toString();
        r2.emit(r5, 2);
        return;

     label0:
        r6 = r0.this$0;
        r7 = new java.lang.StringBuffer;
        specialinvoke r7.<init>("lload ");
        i3 = r0.val$slot;
        r8 = r7.append(i3);
        r9 = r8.toString();
        r6.emit(r9, 2);
        return;
    }

    public void caseRefType(ca.mcgill.sable.soot.RefType)
    {
        ca.mcgill.sable.soot.jimple.JasminClass$16 r0;
        ca.mcgill.sable.soot.RefType r1;
        int i0, i1, i2, i3;
        ca.mcgill.sable.soot.jimple.JasminClass r2, r6;
        java.lang.StringBuffer r3, r4, r7, r8;
        java.lang.String r5, r9;

        r0 := @this;
        r1 := @parameter0;
        i0 = r0.val$slot;
        if i0 < 0 goto label0;

        i1 = r0.val$slot;
        if i1 > 3 goto label0;

        r2 = r0.this$0;
        r3 = new java.lang.StringBuffer;
        specialinvoke r3.<init>("aload_");
        i2 = r0.val$slot;
        r4 = r3.append(i2);
        r5 = r4.toString();
        r2.emit(r5, 1);
        return;

     label0:
        r6 = r0.this$0;
        r7 = new java.lang.StringBuffer;
        specialinvoke r7.<init>("aload ");
        i3 = r0.val$slot;
        r8 = r7.append(i3);
        r9 = r8.toString();
        r6.emit(r9, 1);
        return;
    }

    public void caseNullType(ca.mcgill.sable.soot.NullType)
    {
        ca.mcgill.sable.soot.jimple.JasminClass$16 r0;
        ca.mcgill.sable.soot.NullType r1;
        int i0, i1, i2, i3;
        ca.mcgill.sable.soot.jimple.JasminClass r2, r6;
        java.lang.StringBuffer r3, r4, r7, r8;
        java.lang.String r5, r9;

        r0 := @this;
        r1 := @parameter0;
        i0 = r0.val$slot;
        if i0 < 0 goto label0;

        i1 = r0.val$slot;
        if i1 > 3 goto label0;

        r2 = r0.this$0;
        r3 = new java.lang.StringBuffer;
        specialinvoke r3.<init>("aload_");
        i2 = r0.val$slot;
        r4 = r3.append(i2);
        r5 = r4.toString();
        r2.emit(r5, 1);
        return;

     label0:
        r6 = r0.this$0;
        r7 = new java.lang.StringBuffer;
        specialinvoke r7.<init>("aload ");
        i3 = r0.val$slot;
        r8 = r7.append(i3);
        r9 = r8.toString();
        r6.emit(r9, 1);
        return;
    }

    void <init>(int, ca.mcgill.sable.soot.jimple.JasminClass, ca.mcgill.sable.soot.jimple.Local)
    {
        ca.mcgill.sable.soot.jimple.JasminClass$16 r0;
        int i0;
        ca.mcgill.sable.soot.jimple.JasminClass r1;
        ca.mcgill.sable.soot.jimple.Local r2;

        r0 := @this;
        i0 := @parameter0;
        r1 := @parameter1;
        r2 := @parameter2;
        specialinvoke r0.<init>();
        r0.val$slot = i0;
        r0.this$0 = r1;
        r0.val$vAlias = r2;
        return;
    }
}
