public class ca.mcgill.sable.soot.jimple.SimpleLocalUses extends java.lang.Object implements ca.mcgill.sable.soot.jimple.LocalUses
{
    ca.mcgill.sable.util.Map stmtToUses;

    public void <init>(ca.mcgill.sable.soot.jimple.CompleteStmtGraph, ca.mcgill.sable.soot.jimple.LocalDefs)
    {
        ca.mcgill.sable.soot.jimple.SimpleLocalUses r0;
        ca.mcgill.sable.soot.jimple.CompleteStmtGraph r1;
        ca.mcgill.sable.soot.jimple.LocalDefs r2;
        java.lang.StringBuffer r3, r10, r11;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18;
        ca.mcgill.sable.soot.Timer r4, r5, r20, r21, r39, r40, r50, r51;
        java.io.PrintStream r6;
        ca.mcgill.sable.soot.jimple.StmtBody r7;
        ca.mcgill.sable.soot.SootMethod r8;
        java.lang.String r9, r12;
        ca.mcgill.sable.util.HashMap r13;
        ca.mcgill.sable.util.Iterator r14, r22, r26, r33, r41;
        java.lang.Object r15, r19, r23, r27, r35, r36, r42, r46, r49;
        ca.mcgill.sable.soot.jimple.Stmt r16, r24, r43;
        ca.mcgill.sable.util.Map r17, r34, r44, r45;
        ca.mcgill.sable.util.ArrayList r18;
        ca.mcgill.sable.util.List r25, r32, r37, r47, r48;
        ca.mcgill.sable.soot.jimple.ValueBox r28;
        ca.mcgill.sable.soot.jimple.Value r29, r30;
        ca.mcgill.sable.soot.jimple.Local r31;
        ca.mcgill.sable.soot.jimple.StmtValueBoxPair r38;

        r0 := @this;
        r1 := @parameter0;
        r2 := @parameter1;
        specialinvoke r0.<init>();
        i0 = ca.mcgill.sable.soot.jimple.Main.isProfilingOptimization;
        if i0 == 0 goto label0;

        r4 = ca.mcgill.sable.soot.jimple.Main.usesTimer;
        r4.start();

     label0:
        i1 = ca.mcgill.sable.soot.jimple.Main.isProfilingOptimization;
        if i1 == 0 goto label1;

        r5 = ca.mcgill.sable.soot.jimple.Main.usePhase1Timer;
        r5.start();

     label1:
        i2 = ca.mcgill.sable.soot.jimple.Main.isVerbose;
        if i2 == 0 goto label2;

        r6 = java.lang.System.out;
        r3 = new java.lang.StringBuffer;
        specialinvoke r3.<init>("[");
        r7 = r1.getBody();
        r8 = r7.getMethod();
        r9 = r8.getName();
        r10 = r3.append(r9);
        r11 = r10.append("]     Constructing SimpleLocalUses...");
        r12 = r11.toString();
        r6.println(r12);

     label2:
        r13 = new ca.mcgill.sable.util.HashMap;
        i3 = r1.size();
        i4 = i3 * 2;
        i5 = i4 + 1;
        specialinvoke r13.<init>(i5, 0.7F);
        r0.stmtToUses = r13;
        r14 = r1.iterator();
        goto label4;

     label3:
        r15 = r14.next();
        r16 = (ca.mcgill.sable.soot.jimple.Stmt) r15;
        r17 = r0.stmtToUses;
        r18 = new ca.mcgill.sable.util.ArrayList;
        specialinvoke r18.<init>();
        r19 = r17.put(r16, r18);

     label4:
        i6 = r14.hasNext();
        if i6 != 0 goto label3;

        i7 = ca.mcgill.sable.soot.jimple.Main.isProfilingOptimization;
        if i7 == 0 goto label5;

        r20 = ca.mcgill.sable.soot.jimple.Main.usePhase1Timer;
        r20.end();

     label5:
        i8 = ca.mcgill.sable.soot.jimple.Main.isProfilingOptimization;
        if i8 == 0 goto label6;

        r21 = ca.mcgill.sable.soot.jimple.Main.usePhase2Timer;
        r21.start();

     label6:
        r22 = r1.iterator();
        goto label12;

     label7:
        r23 = r22.next();
        r24 = (ca.mcgill.sable.soot.jimple.Stmt) r23;
        r25 = r24.getUseBoxes();
        r26 = r25.iterator();
        goto label11;

     label8:
        r27 = r26.next();
        r28 = (ca.mcgill.sable.soot.jimple.ValueBox) r27;
        r29 = r28.getValue();
        i9 = r29 instanceof ca.mcgill.sable.soot.jimple.Local;
        if i9 == 0 goto label11;

        r30 = r28.getValue();
        r31 = (ca.mcgill.sable.soot.jimple.Local) r30;
        r32 = r2.getDefsOfAt(r31, r24);
        r33 = r32.iterator();
        goto label10;

     label9:
        r34 = r0.stmtToUses;
        r35 = r33.next();
        r36 = r34.get(r35);
        r37 = (ca.mcgill.sable.util.List) r36;
        r38 = new ca.mcgill.sable.soot.jimple.StmtValueBoxPair;
        specialinvoke r38.<init>(r24, r28);
        i10 = r37.add(r38);

     label10:
        i11 = r33.hasNext();
        if i11 != 0 goto label9;

     label11:
        i12 = r26.hasNext();
        if i12 != 0 goto label8;

     label12:
        i13 = r22.hasNext();
        if i13 != 0 goto label7;

        i14 = ca.mcgill.sable.soot.jimple.Main.isProfilingOptimization;
        if i14 == 0 goto label13;

        r39 = ca.mcgill.sable.soot.jimple.Main.usePhase2Timer;
        r39.end();

     label13:
        i15 = ca.mcgill.sable.soot.jimple.Main.isProfilingOptimization;
        if i15 == 0 goto label14;

        r40 = ca.mcgill.sable.soot.jimple.Main.usePhase3Timer;
        r40.start();

     label14:
        r41 = r1.iterator();
        goto label16;

     label15:
        r42 = r41.next();
        r43 = (ca.mcgill.sable.soot.jimple.Stmt) r42;
        r44 = r0.stmtToUses;
        r45 = r0.stmtToUses;
        r46 = r45.get(r43);
        r47 = (ca.mcgill.sable.util.List) r46;
        r48 = ca.mcgill.sable.util.Collections.unmodifiableList(r47);
        r49 = r44.put(r43, r48);

     label16:
        i16 = r41.hasNext();
        if i16 != 0 goto label15;

        i17 = ca.mcgill.sable.soot.jimple.Main.isProfilingOptimization;
        if i17 == 0 goto label17;

        r50 = ca.mcgill.sable.soot.jimple.Main.usePhase3Timer;
        r50.end();

     label17:
        i18 = ca.mcgill.sable.soot.jimple.Main.isProfilingOptimization;
        if i18 == 0 goto label18;

        r51 = ca.mcgill.sable.soot.jimple.Main.usesTimer;
        r51.end();

     label18:
        return;
    }

    public ca.mcgill.sable.util.List getUsesOf(ca.mcgill.sable.soot.jimple.DefinitionStmt)
    {
        ca.mcgill.sable.soot.jimple.SimpleLocalUses r0;
        ca.mcgill.sable.soot.jimple.DefinitionStmt r1;
        ca.mcgill.sable.util.Map r2;
        java.lang.Object r3;
        ca.mcgill.sable.util.List r4;

        r0 := @this;
        r1 := @parameter0;
        r2 = r0.stmtToUses;
        r3 = r2.get(r1);
        r4 = (ca.mcgill.sable.util.List) r3;
        return r4;
    }
}
